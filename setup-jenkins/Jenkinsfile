pipeline {
    agent any
    options {
        timeout(time:30, unit: 'MINUTES')
    }
    stages {
        stage('Checkout repository') {
            steps {
                echo "Entering 'Checkout repository' stage"
                checkout scm
                echo "Completed 'Checkout repository' stage"
            }
        }
        stage('Check Current Directory') {
            steps {
                sh "ls -la"
            }
        }

        stage('OWASP Dependency-Check Vulnerabilities') {
            steps {
                dependencyCheck additionalArguments: ''' 
                            -o './'
                            -s './setup-jenkins'
                            -f 'ALL' 
                            --prettyPrint''', odcInstallation: 'OWASP Dependency-Check Vulnerabilities'
                
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        }
        
        stage('Build, start docker and kill images'){
            steps {
                sh "docker --version"
                sh "docker --version"
                sh "docker-compose build"
                sh "docker-compose up"
                sh "docker ps"
                sh "docker-compose down"
            }
        }
    } 
}
